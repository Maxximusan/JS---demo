{"mappings":"ACuBC,MAAM,EAAa,OAAO,4CAEpB,EAAmB,OAAO,IAEhC,QAAQ,GAAG,CAPI,mCAAyC,AAAzC,CAAyC,EAQxD,QAAQ,GAAG,CAPK,sBAQhB,QAAQ,GAAG,CAAC,GACZ,QAAQ,GAAG,CAAC,GAIZ,QAAQ,GAAG,CAAC,OAAO,EAAG,AAAH,CAAG,EACtB,QAAQ,GAAG,CAAC,WAKb,QAAQ,GAAG,CAAC,UAMZ,QAAQ,GAAG,CAAC,OAFD,OAGX,QAAQ,GAAG,CAAC,OAHD,MAGc,QAAQ,IACjC,QAAQ,GAAG,CAAC,OAHD,KAIX,QAAQ,GAAG,CAAC,OAAO,CAAA,IACnB,QAAQ,GAAG,CAAC,OAAO,CAAA,IACnB,QAAQ,GAAG,CAAC,CAAA,GACZ,QAAQ,GAAG,CAAC,CAAA,GACZ,QAAQ,GAAG,CAAC,CAAA,GACZ,QAAQ,GAAG,CAAC,IAKZ,QAAQ,GAAG,CAFK,GAGhB,QAAQ,GAAG,CAFI,IAMf,IAAI,EAAU,EACd,QAAQ,GAAG,CAAC,KAEZ,IAAI,EAAW,EACf,QAAQ,GAAG,CAAC,EAAE,GAEd,EAAU,EACV,QAAQ,GAAG,CAAC,EAAI,KAChB,EAAW,EACX,QAAQ,GAAG,CAAC,EAAI,EAAE,GAYlB,QAAQ,GAAG,CALD,KAMV,QAAQ,GAAG,CALA,KAMX,QAAQ,GAAG,CALC,KAMZ,QAAQ,GAAG,CALE,KAMb,QAAQ,GAAG,CALG,IAUd,QAAQ,GAAG,CAFA,KAGX,QAAQ,GAAG,CAFA,MAMX,MAAM,EAAM,GAAM,GAClB,QAAQ,GAAG,CAAC,AAAQ,IADR,GAAM,IAElB,QAAQ,GAAG,CAAC,EAAI,OAAO,CAAC,IAExB,QAAQ,GAAG,CAAC,AAAe,IADR,CAAC,EAAI,OAAO,CAAC,IAIhC,MAAM,EAAM,EAAI,OAAO,CAAC,GACxB,QAAQ,GAAG,CAAC,GAEZ,QAAQ,GAAG,CAAC,OAAO,GAOnB,QAAQ,GAAG,CAAC,OAAO,SAAS,CAHhB,KAIZ,QAAQ,GAAG,CAAC,OAAO,SAAS,CAHhB,OAOZ,QAAQ,GAAG,CAAC,OACZ,QAAQ,GAAG,CAAC,OAEZ,QAAQ,GAAG,CAAC,UACZ,QAAQ,GAAG,CAAC,SAMZ,QAAQ,GAAG,CAFA,KAAK,GAAG,CAAE,KAQrB,QAAQ,GAAG,CAFA,KAAK,IAAI,CAEJ,MAEhB,QAAQ,GAAG,CADE,KAAK,CAAC,EAEnB,QAAQ,GAAG,CAAC,GAEZ,MAAM,EAAM,CAAC,EAAE,EAAE,EAAE,EAAG,EAAE,CACxB,QAAQ,GAAG,CAAC,EAAI,MAAM,CAAG,GACzB,QAAQ,GAAG,CAAC,CAAG,CAAC,EAAI,MAAM,CAAG,EAAE,EAC/B,QAAQ,GAAG,CAAC,EAAI,EAAE,CAAC,KAEnB,QAAQ,GAAG,CAAC","sources":["<anon>","src/JS/test different js stuff/testFromLearnigJS.js"],"sourcesContent":["// #1 alert, promt, confirm\n// alert( 'Ты' )\n// alert( 'Заебал' )\n// let age = prompt('Сколько тебе лет?', 10);\n// alert(`Тебе ${age} лет!`); \n// let isBoss = confirm(\"Ты здесь главный?\");\n// alert( isBoss ); // true, если нажата OK\n//#2 коментарии\n// ага\n/* многострочный\n коментарий*/ // №3 Bigint\nconst bigint = 1234567890123456789012345678901234567890n;\nconst bigint2 = 1234567890123456789012345678901234567890;\nconst sameBigint = BigInt(\"1234567890123456789012345678901234567890\");\nconst bigintFromNumber = BigInt(10); // то же самое, что и 10n\nconsole.log(bigint);\nconsole.log(bigint2);\nconsole.log(sameBigint);\nconsole.log(bigintFromNumber);\n//#4 typeof\nconsole.log(typeof 10n);\nconsole.log(\"boolean\");\n/* В консоле будет - Object --- Это официально признанная ошибка в typeof, ведущая начало с времён создания JavaScript и сохранённая для совместимости. \nКонечно, null не является объектом. Это специальное значение с отдельным типом. */ console.log(\"object\");\n//#5 преобразование типов\nlet nmnm = \"35\";\nlet klkl = 80;\nconsole.log(Number(nmnm));\nconsole.log(Number(nmnm).toString());\nconsole.log(String(klkl));\nconsole.log(Number(true));\nconsole.log(Number(false));\nconsole.log(Boolean(1));\nconsole.log(Boolean(0));\nconsole.log(Boolean(2));\nconsole.log(35); // === +nmnm\n//#6 остаток от деления и позведение в степень\nconst ostatok = 2;\nconst stepen = 27;\nconsole.log(ostatok);\nconsole.log(stepen);\n//#7 инкремент ++, декримент -- \nlet counter = 0;\nconsole.log(counter++);\nlet counter1 = 0;\nconsole.log(++counter1);\ncounter = 1;\nconsole.log(2 * counter++);\ncounter1 = 1;\nconsole.log(2 * ++counter1); // приоритет \"префиксной формы\" декремента выше чем у большинства арифметических операций\n// #8\n// Оператор логического присваивания ИЛИ ||= – это «синтаксический сахар», добавленный в язык в качестве более короткого варианта записи if-выражений с присваиванием.\n//#9 нижние подчеркивания возможны для разделения чисел!\nconst n = 1000000;\nconst nn = 10000;\nconst nnn = 1000;\nconst nnnn = 100;\nconst nnnnn = 10;\nconsole.log(n);\nconsole.log(nn);\nconsole.log(nnn);\nconsole.log(nnnn);\nconsole.log(nnnnn);\n// #9.1 но обычно используют такие записи с многими нулями\nconst n1 = 1e4;\nconst n2 = 1e-4;\nconsole.log(n1);\nconsole.log(n2);\n// #10 окруление и исбавление от погрешности\nconst non = 0.1 + 0.2 // 0.30000000000000004\n;\nconsole.log(non === 0.3); //false\nconsole.log(non.toFixed(2));\nconst upgrateNon = +non.toFixed(2) // or Number(non.toFixed(2))\n;\nconsole.log(upgrateNon === 0.3); // true\n// #11 проверка на тип\nconst fre = non.toFixed(2);\nconsole.log(fre);\n// typeof(fre) or typeof fre\nconsole.log(typeof fre);\n// Методы Number\nconst llk = 11;\nconst kkl = 11.5;\nconst jjk = \"45\";\nconsole.log(Number.isInteger(llk));\nconsole.log(Number.isInteger(kkl));\nconst hhj = 5.1234567;\nconsole.log(hhj.toPrecision(2)); //5.1  - string\nconsole.log(+hhj.toPrecision(4)); //5.123 - number\nconst ggh = 0.00123;\nconsole.log(ggh.toPrecision(2)); //0.0012\nconsole.log(ggh.toPrecision(1)); //0.001\nfunction ffg(a, b, c) {\n    return Math.abs((a - b) * c);\n}\nconsole.log(ffg(50, 30, 2));\nfunction ddf(e) {\n    return Math.sqrt(e);\n}\nconsole.log(ddf(625));\nconst vgvj = Math.E;\nconsole.log(vgvj);\nconsole.dir(Number());\nconst aas = [\n    1,\n    4,\n    7,\n    8,\n    9\n];\nconsole.log(aas.length - 1);\nconsole.log(aas[aas.length - 1]);\nconsole.log(aas.at(-1));\nconsole.dir(aas) // // #90\n // // новый метод \"перевертыш\" - toReversed()\n // const hyh = [1,3,4,6,7]\n // const jik = ['Max','Pola', 'Lucy', 'Francess', 'Lu']\n // // новый метод создает новый массив не изменяя старый.\n // console.log(hyh.toReversed()); \n // console.log(jik.toReversed());\n // // старый метод меняет оригинальный массив\n // console.log(hyh.reverse());\n // console.log(jik.reverse());\n // // #91\n // // новый метод  - toSpliced()\n // const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\"];\n // const spliced = months.toSpliced(0, 1);\n // // новый метод создает новый массив не изменяя старый.\n // console.log(spliced);\n // console.log(months);\n // // старый метод меняет оригинальный массив\n // console.log(months.splice(0, 1));\n // console.log(months);\n;\n\n//# sourceMappingURL=test4.b014a62b.js.map\n","// #1 alert, promt, confirm\n\n// alert( 'Ты' )\n// alert( 'Заебал' )\n\n// let age = prompt('Сколько тебе лет?', 10);\n// alert(`Тебе ${age} лет!`); \n\n// let isBoss = confirm(\"Ты здесь главный?\");\n// alert( isBoss ); // true, если нажата OK\n\n\n//#2 коментарии\n// ага\n\n/* многострочный\n коментарий*/\n\n\n// №3 Bigint\n const bigint = 1234567890123456789012345678901234567890n;\n const bigint2 = 1234567890123456789012345678901234567890;\n\n const sameBigint = BigInt(\"1234567890123456789012345678901234567890\");\n \n const bigintFromNumber = BigInt(10); // то же самое, что и 10n\n\n console.log(bigint);\n console.log(bigint2);\n console.log(sameBigint);\n console.log(bigintFromNumber);\n\n\n //#4 typeof\n console.log(typeof 10n);\n console.log(typeof true);\n\n\n/* В консоле будет - Object --- Это официально признанная ошибка в typeof, ведущая начало с времён создания JavaScript и сохранённая для совместимости. \nКонечно, null не является объектом. Это специальное значение с отдельным типом. */\nconsole.log(typeof null);\n\n\n//#5 преобразование типов\nlet nmnm = '35'\nlet klkl = 80\nconsole.log(Number(nmnm));\nconsole.log(Number(nmnm).toString());\nconsole.log(String(klkl));\nconsole.log(Number(true));\nconsole.log(Number(false));\nconsole.log(Boolean(1));\nconsole.log(Boolean(0));\nconsole.log(Boolean(2));\nconsole.log(+'35'); // === +nmnm\n\n//#6 остаток от деления и позведение в степень\nconst ostatok = 8 % 3\nconst stepen = 3 ** 3\nconsole.log(ostatok);\nconsole.log(stepen);\n\n\n//#7 инкремент ++, декримент -- \nlet counter = 0;\nconsole.log(counter++);\n\nlet counter1 = 0;\nconsole.log(++counter1);\n\ncounter = 1\nconsole.log(2 * counter++); \ncounter1 = 1\nconsole.log(2 * ++counter1); // приоритет \"префиксной формы\" декремента выше чем у большинства арифметических операций\n\n\n// #8\n// Оператор логического присваивания ИЛИ ||= – это «синтаксический сахар», добавленный в язык в качестве более короткого варианта записи if-выражений с присваиванием.\n\n//#9 нижние подчеркивания возможны для разделения чисел!\nconst n = 1_000_000\nconst nn = 10_000\nconst nnn = 1_000\nconst nnnn = 1_00\nconst nnnnn = 1_0\nconsole.log(n);\nconsole.log(nn);\nconsole.log(nnn);\nconsole.log(nnnn);\nconsole.log(nnnnn);\n\n// #9.1 но обычно используют такие записи с многими нулями\nconst n1 = 1e4\nconst n2 = 1e-4\nconsole.log(n1);\nconsole.log(n2);\n\n\n// #10 окруление и исбавление от погрешности\nconst non = 0.1 + 0.2 // 0.30000000000000004\nconsole.log(non === 0.3); //false\nconsole.log(non.toFixed(2));\nconst upgrateNon = +non.toFixed(2) // or Number(non.toFixed(2))\nconsole.log(upgrateNon === 0.3); // true\n\n// #11 проверка на тип\nconst fre = non.toFixed(2)\nconsole.log(fre);\n// typeof(fre) or typeof fre\nconsole.log(typeof fre);\n\n\n// Методы Number\nconst llk = 11\nconst kkl = 11.5\nconst jjk = '45'\nconsole.log(Number.isInteger(llk));\nconsole.log(Number.isInteger(kkl));\n\n\nconst hhj = 5.1234567\nconsole.log(hhj.toPrecision(2)); //5.1  - string\nconsole.log(+hhj.toPrecision(4)); //5.123 - number\nconst ggh = 0.00123\nconsole.log(ggh.toPrecision(2)); //0.0012\nconsole.log(ggh.toPrecision(1)); //0.001\n\n\nfunction ffg (a,b,c) {\n    return Math.abs((a-b)*c)\n}\nconsole.log(ffg(50,30,2));\n\nfunction ddf(e){\n    \n    return Math.sqrt(e)\n}\nconsole.log(ddf(625));\nconst vgvj = Math.E\nconsole.log(vgvj);\nconsole.dir(Number());\n\nconst aas = [1,4,7,8, 9]\nconsole.log(aas.length - 1);\nconsole.log(aas[aas.length - 1] );\nconsole.log(aas.at(-1));\n\nconsole.dir(aas)\n\n\n\n\n\n\n// // #90\n// // новый метод \"перевертыш\" - toReversed()\n\n// const hyh = [1,3,4,6,7]\n// const jik = ['Max','Pola', 'Lucy', 'Francess', 'Lu']\n\n// // новый метод создает новый массив не изменяя старый.\n// console.log(hyh.toReversed()); \n// console.log(jik.toReversed());\n\n// // старый метод меняет оригинальный массив\n// console.log(hyh.reverse());\n// console.log(jik.reverse());\n\n\n// // #91\n// // новый метод  - toSpliced()\n\n// const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\"];\n// const spliced = months.toSpliced(0, 1);\n\n// // новый метод создает новый массив не изменяя старый.\n// console.log(spliced);\n// console.log(months);\n\n// // старый метод меняет оригинальный массив\n// console.log(months.splice(0, 1));\n// console.log(months);"],"names":["sameBigint","BigInt","bigintFromNumber","console","log","Number","toString","String","Boolean","counter","counter1","non","toFixed","upgrateNon","fre","isInteger","hhj","ggh","Math","abs","sqrt","E","dir","aas","length","at"],"version":3,"file":"test4.b014a62b.js.map"}