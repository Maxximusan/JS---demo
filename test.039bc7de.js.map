{"version":3,"sources":["JS/test.js"],"names":["promise","Promise","resolve","reject","canFulfill","Math","random","setTimeout","console","log","yes","result","no","error","then","eeee","wwww","ssss","greet","language","out","english","czech","danish","dutch","estonian","finnish","flemish","french","german","irish","italian","latvian","lithuanian","polish","spanish","swedish","welsh","bob","name","age","prof","bill","yearsExp","lucy","startYear","common","_objectSpread","hasHouse","animals","push","pop","sheff","dish","concat","dir","objfordestr","position","_fuckThisEvilWorld","split","_fuckThisEvilWorld2","_toArray","fistitem","seconditem","other","slice","array","iterator","Symbol","next","max","daughter","iterator2","Object","entries","yourt","getage","testThis2","tag","bug","ololo","opa","changeColor","color","hat","sweater","changeHatColor","bind","changeSweaterColor","ratata","pop3","_toConsumableArray","reduce","acc","cur","qo","qa","qz","qs","qx","qw","qe","String","User","gender","isAdmin","zzz","wpeokf","hfsb","Array","from","cbh","flat","animalsAgain","iteratorAnimals","i","_loop","_i","user","myFunc","currentUser","userName","xc","zxc","Boolean","pizdec","pizdec1","aeto","a","b","c","aa","arguments","item","bb","prototype","call","filter","group","person","whatAfuck","newGroup","neewPerson","a11","getContext","d11","prop","g11","b11","apply","ddd","getThis"],"mappings":"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","file":"test.039bc7de.js","sourceRoot":"../src","sourcesContent":["// // function findLongestWord(string) {\n\n// //     let allWord = string.split(' ');\n// //     let bigWord = allWord[0];\n\n// //     for (let i = 0; i < allWord.length; i += 1) {\n// //         if (allWord[i].length > bigWord.length) {\n// //             bigWord = allWord[i];\n\n// //         }\n\n// //     }\n// //     return bigWord;\n// // }\n// // console.log(findLongestWord(\"Lucy stacy csilla \"));\n// // console.log(findLongestWord(\"The quick brown fox jumped over the lazy dog\"));\n// // console.log(findLongestWord(\"Google do a roll\"));\n// // console.table(findLongestWord(\"May the force be with you\"));\n\n// function printContactsInfo(names = \"\", phones = \"\") {\n//   const arrayOfNames = names.split(\",\");\n//   const arrayOfPhones = phones.split(\",\");\n//   console.log(\"arrayOfNames\", arrayOfNames);\n//   console.log(\"arrayOfPhones\", arrayOfPhones);\n\n//   for (let i = 0; i < arrayOfNames.length; i += 1) {\n//     const aName = arrayOfNames[i];\n//     const aPhones = arrayOfPhones[i];\n//     console.log(`name: ${aName}; phones: ${aPhones}`);\n//   }\n// }\n\n// printContactsInfo(\n//   \"Jacob,William,Solomon,Nicolas\",\n//   \"89001234567,89001112233,890055566377,890055566300\"\n// );\n\n// // const book = {\n// //     title: \"The Last Kingdom\",\n// //     author: \"Bernard Cornwell\",\n// //     genres: [\"historical prose\", \"adventure\"],\n// //     isPublic: true,\n// //     rating: 8.38,\n// // };\n\n// // book.rating = 9;\n// // book.isPublic = false;\n// // book.genres.push(\"драма\");\n\n// // console.log(book.rating); // 9\n// // console.log(book.isPublic); // false\n// // console.log(book.genres); // ['historical prose', 'adventures', 'драма']\n\n// // const a = { x: 2, y: 10, z: 35 };\n// // const b = { x: 5, y: 4, z: 17, t: 80, q: 55 };\n\n// // const c = { ...a, x: 1, ...b, z: 6, name: 'mango', color: 'green' };\n\n// // console.log(c)\n\n// // const name = \"Repair Droid\";\n// // const price = 2500;\n// // const image = \"https://via.placeholder.com/640x480\";\n// // const tags = [\"on sale\", \"trending\", \"best buy\"];\n\n// // const product = {\n// //     name,\n// //     price,\n// //     image,\n// //     tags,\n// //     // Change code below this line\n// //     // Change code above this line\n// // };\n// // console.log(product);\n\n// // const emailInputName = \"email\";\n// // const passwordInputName = \"password\";\n\n// // const credentials = {\n// //     // Change code below this line\n// //     [emailInputName]: \"henry.carter@aptmail.com\",\n// //     [passwordInputName]: \"jqueryismyjam\",\n\n// //     // Change code above this line\n// // };\n// // console.log(credentials);\n\n// // const products = [\n// //     { name: \"Radar\", price: 1300, quantity: 4 },\n// //     { name: \"Scanner\", price: 2700, quantity: 3 },\n// //     { name: \"Droid\", price: 400, quantity: 7 },\n// //     { name: \"Grip\", price: 1200, quantity: 9 },\n// // ];\n\n// // console.table(products);\n\n// // function getProductPrice(productName) {\n// //     // Change code below this line\n// //     for (const product of products) {\n// //         if (product.name === productName) {\n// //             return (product.price);\n// //         }\n// //     }\n\n// //     return null;\n// //     // Change code above this line\n// // }\n// // console.log(getProductPrice(\"Radar\"));\n\n// // const products = [\n// //     { name: \"Radar\", price: 1300, quantity: 4 },\n// //     { name: \"Scanner\", price: 2700, quantity: 3 },\n// //     { name: \"Droid\", price: 400, quantity: 7 },\n// //     { name: \"Grip\", price: 1200, quantity: 9 },\n// // ];\n\n// // function getAllPropValues(propName) {\n// //     // Change code below this line\n// //     const emptyMassive = [];\n\n// //     for (const product of products) {\n// //         if (Object.keys(product).includes(propName)) {\n// //             emptyMassive.push(product[propName]);\n// //         }\n// //     }\n// //     return emptyMassive;\n\n// //     // Change code above this line\n// // }\n// // console.log(getAllPropValues('price'));\n\n// // автопроверка 3 модуль 41 задача\n// // const atTheOldToad = {\n// //     potions: [\n// //         { name: \"Speed potion\", price: 460 },\n// //         { name: \"Dragon breath\", price: 780 },\n// //         { name: \"Stone skin\", price: 520 },\n// //     ],\n// //     getPotions() {\n// //         return this.potions;\n// //     },\n// // addPotion(newPotion) {\n// //     for (potion of this.potions) {\n// //         if (potion.name === newPotion.name) {\n// //             return `Error! Potion ${newPotion.name} is already in your inventory!`;\n// //         }\n// //     }\n// //     this.potions.push(newPotion);\n// // },\n// //     removePotion(potionName) {\n// //         for (let potion of this.potions) {\n\n// //             if (potion.name === potionName) {\n// //                 const indexPotion = this.potions.indexOf(potion);\n\n// //                 if (indexPotion === -1) {\n// //                     return `Potion ${potionName} is not in inventory!`;\n// //                 };\n// //                 this.potions.splice(indexPotion, 1);\n// //             }\n// //         }\n// //     },\n// //     updatePotionName(oldName, newName) {\n// //         for (let potion of this.potions) {\n// //             if (potion.name === oldName) {\n// //                 potion.name = newName;\n// //             }\n// //         }\n// //         // Change code above this line\n// //     }\n// // }\n\n// // callback - пример 1\n// // const fna = function (message, callback) {\n// //     console.log(message);\n// //     console.log(callback);\n// //     callback(100, 888);\n// // }\n\n// // const fnb = function (number, total) {\n// //     console.log(\"вызов fnb\", number, total);\n// // }\n// // fna('fuck monkey', fnb);\n\n// // callback - пример 2 + инлайн функция + строчная\n// const fnA = function (a, b, callback) {\n//   const result = callback(a, b);\n//   console.log(\"result\", result);\n// };\n\n// const fnB = function (x, y) {\n//   return x + y;\n// };\n\n// const fnC = function (x, y) {\n//   return x - y;\n// };\n\n// fnA(2, 3, fnB);\n\n// fnA(10, 8, function (x, y) {\n//   return x - y;\n// });\n\n// fnA(11, 8, (x, y) => x * y);\n\n// // const navEl = document.querySelector('.list');\n// // const navLiEl = navEl.firstElementChild;\n// // console.log(navLiEl);\n// // const navAllChild = navLiEl.firstElementChild;\n// // console.log(navAllChild);\n// // navEl.classList.add('fuck');\n// // navLiEl.classList.toggle('in-open');\n\n// // navAllChild.textContent = 'Влажный язык'\n// // console.log(navAllChild);\n// // const imgForEl = document.createElement('img');\n// // imgForEl.alt = 'бабочка'\n// // navLiEl.appendChild(imgForEl);\n// // console.log(navLiEl);\n\n// // const min = 6;\n// // const max = 21;\n// // let total = 0;\n\n// // for (let i = min; i <= max; i += 1) {\n\n// //     if (i % 2 !== 0) {\n// //         continue;\n// //     }\n// //     total += i;\n// // };\n// // console.log(total)\n\n// // const string = \"javascript\";\n\n// // for (const character of string) {\n// //     console.log(character);\n// // }\n\n// const tratata = [];\n// console.log(tratata);\n\n// const fmdlkb = [\"a\", \"b\", \"c\", \"d\", \"e\", 2, 7];\n// fmdlkb.pop();\n// console.log(fmdlkb);\n// fmdlkb.shift();\n// console.log(fmdlkb);\n// fmdlkb.unshift(\"Z\");\n// console.log(fmdlkb);\n// fmdlkb.splice(2, 2, \"Q\");\n// console.log(fmdlkb);\n// //\n// // console.log(fmdlkb.join(' '));\n\n// const ewf = fmdlkb.join(\"\");\n// console.log(ewf);\n\n// const rrr = [38, 90, 42, 17];\n// // Math.min(...rrr);\n// console.log(Math.max(...rrr));\n\n// function find_average(array) {\n//   let total = 0;\n//   if (array.length === 0) {\n//     return 0;\n//   }\n\n//   for (let arr of array) {\n//     total += arr;\n//   }\n//   return total / array.length;\n// }\n// // const find_average = (array) => {\n// //     return array.length === 0 ? 0 : array.reduce((acc, ind) => acc + ind, 0) / array.length\n// // }\n// // find_average([1, 2, 3]);\n\n// // function find_average(array) {\n// //     if (array.length == 0) return 0\n// //     let result = 0;\n\n// //     for (let num of array) {\n// //         result += num;\n// //     }\n// //     return result / array.length;\n// // }\n\n// // function find_average(array) {\n// //     return (Math.min(...array) + Math.max(...array)) / 2;\n// // }\n\n// console.log(find_average([1, 2, 3]));\n// console.log(find_average([10, 30, 70]));\n// console.log(find_average([]));\n\n// function getGrade(s1, s2, s3) {\n//   let total = (s1 + s2 + s3) / 3;\n//   if (total <= 100 && total >= 90) {\n//     return \"A\";\n//   } else if (total <= 90 && total >= 80) {\n//     return \"B\";\n//   } else if (total <= 80 && total >= 70) {\n//     return \"C\";\n//   } else if (total <= 70 && total >= 60) {\n//     return \"D\";\n//   } else total <= 60 && total >= 0;\n//   {\n//     return \"F\";\n//   }\n// }\n\n// console.log(getGrade(80, 70, 80));\n\n// let fff = [5, 78, 24, 503, 300, 68];\n\n// const newFff = [...fff];\n// function compareNumbers(a, b) {\n//   return a - b;\n// }\n// console.log(newFff.join());\n// console.log(newFff.sort());\n// console.log(newFff.sort(compareNumbers));\n\n// const date = new Date();\n// console.log(date.getTime());\n\n// console.log(\"Date: \", date);\n\n// // Возвращает день месяца от 1 до 31\n// console.log(\"getUTCDate(): \", date.getUTCDate());\n\n// // Возвращает день недели от 0 до 6\n// console.log(\"getUTCDay(): \", date.getUTCDay());\n\n// // Возвращает месяц от 0 до 11\n// console.log(\"getUTCMonth(): \", date.getUTCMonth());\n\n// // Возвращает год из 4 цифр\n// console.log(\"getUTCFullYear(): \", date.getUTCFullYear());\n\n// // Возвращает час\n// console.log(\"getUTCHours(): \", date.getUTCHours());\n\n// // Возвращает минуты\n// console.log(\"getUTCMinutes(): \", date.getUTCMinutes());\n\n// // Возвращает секунды\n// console.log(\"getUTCSeconds(): \", date.getUTCSeconds());\n\n// // Возвращает миллисекунды\n// console.log(\"getUTCMilliseconds(): \", date.getUTCMilliseconds());\n\n// // сеттаймаут тестил\n// setTimeout(\n//   (x) => {\n//     console.log(x);\n//     console.log(\"AAAAAAAAAAAAAA\");\n//   },\n//   4000,\n//   \"fuck\"\n// );\n\n// const pot = (x) => {\n//   console.log(`now is ... ${x}`);\n//   console.log(\"BUGAGA\");\n// };\n// const timeoutId = setTimeout(pot, 2000, \"FUUUUUCK\");\n\n// // clearTimeout(timeoutId);\n\n// fetch(\"https://pokeapi.co/api/v2/pokemon/3\")\n//   .then((response) => {\n//     // console.log(response.json())\n//     return response.json();\n//   })\n//   .then((pokemon) => {\n//     console.log(pokemon);\n//   })\n//   .catch((error) => {\n//     console.log(error);\n//   });\n\n// // // закрепил колбеки (4й модуль)\n// // const filterr = function (array, allCallback) {\n// //     const AF = []\n// //     for (let el of array) {\n// //         let ourSettings = allCallback(el)\n// //         if (ourSettings) {\n// //             AF.push(el)\n// //             console.log(el)\n// //         }\n// //     }\n\n// //     return AF\n// // }\n\n// // const callback1 = function (value) {\n// //     return value >= 3\n// // }\n// // const callback2 = function (value) {\n// //     return value <= 7\n// // }\n\n// // const firstArray = filterr([1, 2, 3, 4, 5], callback1)\n// // console.log(firstArray)\n// // const secondArray = filterr([2, 4, 5, 6, 7, 9, 10], callback2)\n// // console.log(secondArray)\n\n// // повторяю this (5ймодуль)\n// // чуток практики по this\n// const opo = function () {\n//   console.log(\"fuck this shit\", this);\n//   console.log(\"fuck this tag shit\", this.tag);\n// };\n\n// const pop = {\n//   tag: \"Jojo\",\n// };\n\n// pop.show = opo;\n// console.log(pop);\n\n// pop.show();\n\n// // практикую прототипное наследование\n// const objeD = {\n//   D: \"z\",\n// };\n\n// const objeC = Object.create(objeD);\n\n// objeC.C = \"y\";\n\n// const objeB = Object.create(objeC);\n\n// objeB.B = \"x\";\n\n// const objeA = Object.create(objeB);\n\n// console.log(objeA);\n// console.log(objeB);\n// console.log(objeC);\n// console.log(objeD);\n\n// // практикую функция конструктор\n\n// const Main = function ({\n//   paparoach,\n//   threedaysgrace,\n//   saintassonia,\n//   numbertrack,\n// }) {\n//   this.paparoach = paparoach;\n//   this.threedaysgrace = threedaysgrace;\n//   this.saintassonia = saintassonia;\n// };\n\n// Main.prototype.method = function () {\n//   console.log(\"FUCK THE SYSTEM\");\n// };\n\n// Main.prototype.method = function (newsong) {\n//   this.paparoach = newsong;\n// };\n\n// const lineA = new Main({\n//   paparoach: \"falling appart\",\n//   threedaysgrace: \"its all over\",\n//   saintassonia: \"the fallen\",\n// });\n// const lineB = new Main({\n//   paparoach: \"last resort\",\n//   threedaysgrace: \"never to late\",\n//   saintassonia: \"so what\",\n// });\n// const lineC = new Main({\n//   paparoach: \"help\",\n//   threedaysgrace: \"get out alive\",\n//   saintassonia: \"better late than never\",\n// });\n\n// console.log(lineA);\n// console.log(lineB);\n// console.log(lineC);\n\n// lineC.method();\n\nconst promise = new Promise((resolve, reject) => {\n  const canFulfill = Math.random() > 0.5;\n\n  setTimeout(() => {\n    if (canFulfill) {\n      resolve(\"эуспешно все !!!!\");\n    } else {\n      reject(\"NAHOY )))\");\n    }\n  }, 2000);\n  console.log(canFulfill);\n});\nconsole.log(promise);\n\n// 1я запись\n// promise.then(\n//   (result) => console.log(result),\n//   (error) => console.log(error)\n// );\n// 2я запись (тоже самое)\npromise.then(yes, no);\n\nfunction yes(result) {\n  console.log(result);\n}\nfunction no(error) {\n  console.log(error);\n}\n\n// !!!!!\nconst eeee = {};\nconst wwww = \"1,2,3,4\";\nlet ssss = \"JOHNNY\";\nconsole.log(eeee[wwww]);\neeee[wwww] = ssss; // в пустой объект мы ложим ключем то что в wwww и свойством задаем ssss\nconsole.log(eeee); // теперь у нас не пустой объект\nconsole.log(eeee[wwww]); // это идентичная запись как и обращение через точку к свойству. (но мы не можем так в данном случае -- eeee.'1-2-3-4' -- это не одним словом (сложная) и не покажет через точку)\n//А если поменять местами ssss и wwww -- мы сможем написать через сточку eeee.ssss и увидеть в консоле !!! Квадратные скобки дают намного больше возможностей, чем запись через точку.\nconsole.log(ssss);\n\n\n//Задача из кодварс\nfunction greet(language) {\n  const out = {\n    english: \"Welcome\",\n    czech: \"Vitejte\",\n    danish: \"Velkomst\",\n    dutch: \"Welkom\",\n    estonian: \"Tere tulemast\",\n    finnish: \"Tervetuloa\",\n    flemish: \"Welgekomen\",\n    french: \"Bienvenue\",\n    german: \"Willkommen\",\n    irish: \"Failte\",\n    italian: \"Benvenuto\",\n    latvian: \"Gaidits\",\n    lithuanian: \"Laukiamas\",\n    polish: \"Witamy\",\n    spanish: \"Bienvenido\",\n    swedish: \"Valkommen\",\n    welsh: \"Croeso\",\n  };\n  console.log(language);\n  console.log(out[language]); // когда данные приходят динамически и мы не можем знать имя ключа.\n\n  console.log(out.english);\n  console.log(out[\"english\"]);\n  return out[language] || out.english; //-- или идентично out['english']\n}\ngreet(\"spanish\");\n\n// console.dir(_);\n\n// Тренируюсь по cracking.js\n// Урок 1-2\n// чтобы не мутировать первоначальные данные\n// использовать  spread\n// const person = (arg) => {\n//   const newarg = {...arg}\n// };\n\n// или Object.assign;\n// const param = { name: \"Selena\", profession: \"slut\" };\n// const paramsecond = { price: \"100$\" };\n// const paramthird = { price: \"200$\", age: 19 };\n// const newObj = {};\n// const newperson = Object.assign(newObj, param, paramsecond, paramthird);\n// console.log(newObj);\n// console.log(newObj === newperson);\n\n// или lodash (_.clone)\n// const obj = [{ a: 1 }, { b: 2 }, { c: 3 }];\n// const newobj = _.clone(obj);\n// console.log(newobj);\n// console.log(newobj === obj);\n// console.log(newobj[0] === obj[0]);\n\n// урок 3\n// const people = [\n//   { name: \"Bobby\", age: 18, pro: \"fharma\" },\n//   { name: \"Max\", age: 38, pro: \"poker_pro\" },\n//   { name: \"Vova\", age: 38, pro: \"medical\" },\n//   { name: \"Arnold\", age: 20, pro: \"kach\" },\n//   { name: \"Lucy\", age: 19, pro: \"porn_model\" },\n// ];\n\n// const Bbbb = people.filter((person) => person.age > 35);\n// console.log(Bbbb);\n\n// const Cccc = people.map((person) => person.age > 35);\n// console.log(Cccc);\n\n// const ddd = people.map((person) => ({ ...person, name: \"John\" }));\n// console.log(ddd);\n\n// const oldest = people.reduce((prev, person) => {\n//   // debugger;\n//   if (prev < person.age) {\n//     return person.age;\n//   }\n//   return prev;\n// }, 17);\n// console.log(oldest);\n\n/////////\n// const PO = \"cat, dog, cow\";\n// const LO = \"cat dog cow\";\n\n// const OL = LO.split(\" \");\n// const OP = PO.split(\",\");\n// const OLL = OL.join(\", \");\n// const OPP = OP.join(\" |\");\n\n// console.log(OL);\n// console.log(OP);\n// console.log(OLL);\n// console.log(OPP);\n\n// //изменение свойства одного из ключей\n// const newName = people.map((person) =>\n//   // debugger;\n//   person.name === \"Vova\" ? (person.name = \"Jamal\") : person.name\n// );\n// console.log(newName);\n\n// урок 4\n\nconst bob = { name: \"Bob\", age: 40, prof: \"Builder\" };\nconst bill = { name: \"Bill\", prof: \"QA\", yearsExp: 2 };\nconst lucy = { name: \"Lucy\", prof: \"pornstar\", startYear: 2000 };\n\nconst common = { ...bob, ...bill, hasHouse: true };\n// const common = Object.assign(bob, bill, { hasHouse: true });\n\nconsole.log(common);\nconsole.log(bob.prof, bill.age, bob.hasHouse);\nconsole.log(bob);\n\n// Object.assign мутирует - поэтому в 642 строке hasHose есть - а при спреде - нет\n////////////////\n\nconst animals = [\"cow\", \"pig\", \"cat\", \"dog\"];\n\n// const example = animals.push(\"horse\");\nconsole.log(animals.push(\"horse\"));\nconsole.log(animals.pop());\n// console.log(example);\nconsole.log(animals);\n\n// урок 4.1 - замыкание (пример Репеты)\nconst sheff = function (name) {\n  const dish = function (dish) {\n    console.log(`${name} приготовил ${dish}`);\n  };\n  return dish;\n};\n\nconst result = sheff(\"Alex\");\n\nresult(\"Cake\");\nconsole.dir(result);\n\n// деструктуризация\nconst objfordestr = {\n  name: \"Bryan\",\n  age: 28,\n  position: \"teamLead\",\n};\n\nconst { name, age, position } = objfordestr;\n\nconsole.log(name);\nconsole.log(age);\nconsole.log(position);\n\nlet [fistitem, seconditem, ...other] = \"fuck this evil world\".split(\" \");\n\nconsole.log(fistitem);\nconsole.log(seconditem);\nconsole.log(other);\n\n// урок 4.2\n// итератор (асинхронный перебор коллекции)\n\nconst array = [1, 2, \"Max\", 4, 5];\nconst iterator = array[Symbol.iterator]();\niterator.next();\nconsole.log(iterator.next());\nconsole.log(iterator.next());\n//\n\nconst max = {\n  name: \"Max\",\n  age: \"38\",\n  daughter: \"Sofia\",\n};\n\nconst iterator2 = Object.entries(max)[Symbol.iterator]();\nconsole.log(iterator2.next());\nconsole.log(iterator2.next());\nconsole.log(iterator2.next());\nconsole.log(iterator2.next());\n\n//this (по Репете 5.1)\n// пример 1\nconst yourt = {\n  name: \"ryan\",\n  age: 28,\n\n  getage() {\n    console.log(\"age ryan\", this);\n  },\n};\n\nyourt.getage();\n\n//пример 2\nconst testThis2 = function () {\n  console.log(\"testThis2\", this);\n  console.log(\"testThis2\", this.tag);\n  console.log(\"testThis2\", this.bug);\n};\n\nconst ololo = {\n  tag: \"fuck\",\n  bug: \"muck\",\n};\n\nololo.opa = testThis2;\n\nconsole.log(\"ololo\", ololo);\n\nololo.opa();\n\n//\n// call и apply (вызывают контекст здесь и сейчас), bind (копия ф-и с привязаным контекстом)---- привязка контекста\nconst changeColor = function (color) {\n  console.log(\"changeColor ---->\", this);\n  this.color = color;\n};\n\nconst hat = {\n  color: \"black\",\n};\n// changeColor.call(hat, \"orange\");\n// console.log(hat);\n\nconst sweater = {\n  color: \"green\",\n};\n\n// changeColor.call(sweater, \"orange\");\n// console.log(sweater);\n\n// или bind\nconst changeHatColor = changeColor.bind(hat);\nconst changeSweaterColor = changeColor.bind(sweater);\nchangeSweaterColor();\nchangeHatColor();\nconsole.log(hat);\nconsole.log(sweater);\n\nconst ratata = (pop) => {\n  const pop2 = [...pop];\n  const pop3 = pop2.reduce((acc, cur) => acc + cur, 0);\n  console.log(pop3);\n};\n\nratata([1, 2, 3, 4, 5]);\n\n//craking js 2.3\n// const owner = {\n//   name: \"Freddy\",\n//   age: 21,\n//   home: \"Krakow\",\n// };\n\n// const dog = {\n//   name: \"Petrovich\",\n//   age: 2,\n//   breed: \"French Buldog\",\n// };\n\n// const map = new Map();\n\n// map.set(owner, dog);\n// console.log(owner);\n// console.log(dog);\n// console.log(map);\n\n// const funrrr = () => {\n//   console.log(map);\n// };\n\n// const trt = true;\n// const map1 = new Map();\n\n// map1.set(funrrr, trt);\n\n// console.log(map1);\n\nconst qo = \"1\";\nconst qa = +\"2\" + 1;\nconsole.log(qa);\n\nconst qz = 1 + \"10\";\nconsole.log(qz);\n\nconst qs = \"10\" + 1;\nconsole.log(qs);\n\nconst qx = 1 + +\"10\";\nconsole.log(qx);\n\nconst qw = {};\nconst qe = String(qw);\nconsole.log(qe);\n\nfunction User(name, age, prof, gender, isAdmin) {\n  this.name = name;\n  this.age = age;\n  this.prof = prof;\n  this.gender = gender;\n  this.isAdmin = isAdmin;\n}\nconst zzz = new User(\"Lucy\", 23, \"slut\", \"female\", false);\nconsole.log(zzz);\n\n\n// craking js 4.2 (sort, slice, flat)\n// let fff = [1, 1000, 5, 78, 24, 503, 300, 68];\n\n// const newFff = [...fff];\n// function compareNumbers(a, b) {\n//   return a - b;\n// }\n\n// function compareNumbersReverse(a, b) {\n//   return b - a;\n// }\n// console.log(newFff.join());\n// console.log(newFff.sort());\n// console.log(newFff.sort(compareNumbers));\n// console.log(newFff.sort(compareNumbersReverse));\n\nlet wpeokf = 'this is fucking good '\nlet hfsb = Array.from(wpeokf)\nconsole.log(hfsb);\nconsole.log(hfsb.slice(0,3));\nconsole.log(hfsb.slice(1,4));\nconsole.log(hfsb.slice(5,10));\n\nlet cbh = [1,2,3, [4,5,[6,7,[8,9]]]]\nconsole.log(cbh.flat());\nconsole.log(cbh.flat(2));\nconsole.log(cbh.flat(3));\n\n\nconst animalsAgain = ['cat', 'dog', 'fish', 'bird']\nconst iteratorAnimals = animalsAgain.entries()\nconsole.log(iteratorAnimals.next());\nconsole.log(iteratorAnimals.next());\nconsole.log(iteratorAnimals.next());\nconsole.log(iteratorAnimals.next());\nconsole.log(iteratorAnimals.next());\n\n\n\n// задача для собеседования с сеттаймаутом - что сдесь не так ?\nfor(var i = 0; i < 10; i++) {\n  setTimeout(() => console.log(i), 0)\n}\n// ответ: сеттайм аут выполняется вконце, когда значение i - уже 10 !!!\n\n// Решение:\n// Вариант 1 (заменить var (у которого функциональная область видимости - и он создается вне цикла for) на let (у которого блочная область видимости - и он создается внутри цикла for))\nfor (let i = 0; i < 10; i+= 1){\n  //sync !!!!!\n  setTimeout(\n    //async !!!!!\n    () => {\nconsole.log(i);\n  }, 0)\n}\n// Вариант 2 (таким образом на момент вызова колбека ему передастся актуальное значение i - на момент запуска сеттаймаута. a - это второй и до десятого аргумент)\n// for(var i = 0; i < 10; i++) {\n//   setTimeout((a) => console.log(a), 0, i)\n// }\n\n// Вариант 3\n// for(var i = 0; i < 10; i++) {\n//   const func = () => {\n//     var value = i\n//   setTimeout(() => console.log(value), 0)\n// }\n// func()\n// }\n\n\n\n// Тесты кахута - то что забыл или не заметил проверяю\n// 1 нюанс что выводится если передать иили не передать user (по сути правила для || и &&)\nconst user = { name: 'Lucy'}\n\nconst myFunc = (user) => {\nconst currentUser = user || {name: 'Coreena'}\nconst userName = user && user.name\nconsole.log(currentUser.name, userName);\n}\n\nmyFunc()\n// myFunc(user)\n\n// 2 привод к булеан значению 2 варианта\nconst xc = !!-1\nconsole.log(xc);\nconst zxc = new Boolean(-1)\nconsole.log(zxc);\n\n// 3 не знал что тут 1 получается\nconst pizdec = true + false\nconst pizdec1 = true - false\nconsole.log(pizdec);\nconsole.log(pizdec1);\n\n// 4 вывод всех аргументов\nfunction aeto (a,b,c){\n  var aa = Array.from(arguments).slice(item => item)\n  var bb = [...arguments].filter(item => item)\n\n  console.log(aa);\n  console.log(bb);\n\n}\n\naeto('Adonis', 'Boris', 'Coco')\n\n//5\nvar group = {\n  person: 'MotherFucker'\n}\n\nfunction whatAfuck(b){\n  console.log(b);\n  var newGroup = b\n  newGroup.person='Bill'\n\n  if(b){\n    newGroup.person = 'John'\n  }\n  return newGroup\n}\nvar neewPerson = whatAfuck(group).person\n// или убрать .person со строки выше и записать в консоль.лог ниже\nconsole.log(neewPerson);\nconsole.log(group.person);\n\n//6 проверка что покажет bind, apply, call (bind как на уроке - а вот call и apply НЕТ и я ранее такое видел уже)\nvar a11 = {\n  b: 1,\n  getContext: function() { console.log(this) }\n}\nvar d11 = {prop: 'here'}\nvar g11 = a11.getContext.bind(d11)\nlet b11 = a11.getContext.apply(d11)\nconsole.log(g11, b11);\n\n//7 - проверка как я создал метод для ddd\nvar ddd = { b:3 }\nconsole.log(ddd);\nddd.getThis = a11.getContext\nconsole.log(ddd);\nddd.getThis()\n\n\n"]}